<map id="pss::astrotypes::sigproc::HeaderField&lt; T &gt;" name="pss::astrotypes::sigproc::HeaderField&lt; T &gt;">
<area shape="rect" id="node3" href="$classpss_1_1astrotypes_1_1sigproc_1_1HeaderFieldDataType.html" title="Specilist class for the sigproc data type variable. " alt="" coords="224,809,413,963"/>
<area shape="rect" id="node5" href="$classpss_1_1astrotypes_1_1sigproc_1_1HeaderFieldWithTolerance.html" title="specialisation to allow the == operator to return true if the values are within specified tolerance ..." alt="" coords="1510,816,1726,956"/>
<area shape="rect" id="node7" href="$classpss_1_1astrotypes_1_1sigproc_1_1HeaderField.html" title="{pss::astrotypes::sigproc\l::HeaderField\&lt; boost::units\l::quantity\&lt; units::Seconds,\l double \&gt; \&gt;\n|# _var\l|+ HeaderField()\l+ HeaderField()\l+ HeaderField()\l+ operator boost::units\l::quantity\&lt; units::Seconds,\l double \&gt;const &amp;()\l+ operator boost::units\l::quantity\&lt; units::Seconds,\l double \&gt; &amp;()\l+ operator boost::optional\l\&lt; boost::units::quantity\l\&lt; units::Seconds, double\l \&gt; \&gt; const &amp;()\l+ operator=()\l+ operator=()\l+ read()\l+ write()\l+ write_info()\l+ reset()\l+ is_set()\l+ operator==()\l+ operator==()\l# HeaderField()\l}" alt="" coords="437,683,618,1089"/>
<area shape="rect" id="node8" href="$classpss_1_1astrotypes_1_1sigproc_1_1HeaderField.html" title="{pss::astrotypes::sigproc\l::HeaderField\&lt; double \&gt;\n|# _var\l|+ HeaderField()\l+ HeaderField()\l+ HeaderField()\l+ operator doubleconst &amp;()\l+ operator double &amp;()\l+ operator boost::optional\l\&lt; double \&gt; const &amp;()\l+ operator=()\l+ operator=()\l+ read()\l+ write()\l+ write_info()\l+ reset()\l+ is_set()\l+ operator==()\l+ operator==()\l# HeaderField()\l}" alt="" coords="642,736,821,1036"/>
<area shape="rect" id="node9" href="$classpss_1_1astrotypes_1_1sigproc_1_1HeaderField.html" title="{pss::astrotypes::sigproc\l::HeaderField\&lt; std::string \&gt;\n|# _var\l|+ HeaderField()\l+ HeaderField()\l+ HeaderField()\l+ operator std::stringconst &amp;()\l+ operator std::string &amp;()\l+ operator boost::optional\l\&lt; std::string \&gt; const &amp;()\l+ operator=()\l+ operator=()\l+ read()\l+ write()\l+ write_info()\l+ reset()\l+ is_set()\l+ operator==()\l+ operator==()\l# HeaderField()\l}" alt="" coords="845,736,1042,1036"/>
<area shape="rect" id="node10" href="$classpss_1_1astrotypes_1_1sigproc_1_1HeaderField.html" title="{pss::astrotypes::sigproc\l::HeaderField\&lt; boost::units\l::quantity\&lt; pss::astrotypes\l::units::Parsecs, double \&gt; \&gt;\n|# _var\l|+ HeaderField()\l+ HeaderField()\l+ HeaderField()\l+ operator boost::units\l::quantity\&lt; pss::astrotypes\l::units::Parsecs, double\l \&gt;const &amp;()\l+ operator boost::units\l::quantity\&lt; pss::astrotypes\l::units::Parsecs, double \&gt; &amp;()\l+ operator boost::optional\l\&lt; boost::units::quantity\l\&lt; pss::astrotypes::units\l::Parsecs, double \&gt; \&gt; const &amp;()\l+ operator=()\l+ operator=()\l+ read()\l+ write()\l+ write_info()\l+ reset()\l+ is_set()\l+ operator==()\l+ operator==()\l# HeaderField()\l}" alt="" coords="1067,676,1271,1096"/>
<area shape="rect" id="node11" href="$classpss_1_1astrotypes_1_1sigproc_1_1HeaderField.html" title="{pss::astrotypes::sigproc\l::HeaderField\&lt; boost::units\l::quantity\&lt; units::MegaHertz,\l double \&gt; \&gt;\n|# _var\l|+ HeaderField()\l+ HeaderField()\l+ HeaderField()\l+ operator boost::units\l::quantity\&lt; units::MegaHertz,\l double \&gt;const &amp;()\l+ operator boost::units\l::quantity\&lt; units::MegaHertz,\l double \&gt; &amp;()\l+ operator boost::optional\l\&lt; boost::units::quantity\l\&lt; units::MegaHertz, double\l \&gt; \&gt; const &amp;()\l+ operator=()\l+ operator=()\l+ read()\l+ write()\l+ write_info()\l+ reset()\l+ is_set()\l+ operator==()\l+ operator==()\l# HeaderField()\l}" alt="" coords="1294,683,1486,1089"/>
<area shape="rect" id="node12" href="$classpss_1_1astrotypes_1_1sigproc_1_1HeaderField.html" title="{pss::astrotypes::sigproc\l::HeaderField\&lt; unsigned \&gt;\n|# _var\l|+ HeaderField()\l+ HeaderField()\l+ HeaderField()\l+ operator unsignedconst &amp;()\l+ operator unsigned &amp;()\l+ operator boost::optional\l\&lt; unsigned \&gt; const &amp;()\l+ operator=()\l+ operator=()\l+ read()\l+ write()\l+ write_info()\l+ reset()\l+ is_set()\l+ operator==()\l+ operator==()\l# HeaderField()\l}" alt="" coords="5,736,199,1036"/>
<area shape="rect" id="node13" href="$classpss_1_1astrotypes_1_1sigproc_1_1HeaderField.html" title="{pss::astrotypes::sigproc\l::HeaderField\&lt; units::Dispersion\lMeasure\&lt; double \&gt; \&gt;\n|# _var\l|+ HeaderField()\l+ HeaderField()\l+ HeaderField()\l+ operator units::Dispersion\lMeasure\&lt; double \&gt;const &amp;()\l+ operator units::Dispersion\lMeasure\&lt; double \&gt; &amp;()\l+ operator boost::optional\l\&lt; units::DispersionMeasure\l\&lt; double \&gt; \&gt; const &amp;()\l+ operator=()\l+ operator=()\l+ read()\l+ write()\l+ write_info()\l+ reset()\l+ is_set()\l+ operator==()\l+ operator==()\l# HeaderField()\l}" alt="" coords="1750,709,1961,1063"/>
<area shape="rect" id="node14" href="$classpss_1_1astrotypes_1_1sigproc_1_1HeaderField.html" title="{pss::astrotypes::sigproc\l::HeaderField\&lt; boost::units\l::quantity\&lt; units::Degree,\l double \&gt; \&gt;\n|# _var\l|+ HeaderField()\l+ HeaderField()\l+ HeaderField()\l+ operator boost::units\l::quantity\&lt; units::Degree,\l double \&gt;const &amp;()\l+ operator boost::units\l::quantity\&lt; units::Degree,\l double \&gt; &amp;()\l+ operator boost::optional\l\&lt; boost::units::quantity\l\&lt; units::Degree, double \&gt;\l \&gt; const &amp;()\l+ operator=()\l+ operator=()\l+ read()\l+ write()\l+ write_info()\l+ reset()\l+ is_set()\l+ operator==()\l+ operator==()\l# HeaderField()\l}" alt="" coords="1985,683,2166,1089"/>
<area shape="rect" id="node15" href="$classpss_1_1astrotypes_1_1sigproc_1_1HeaderField.html" title="{pss::astrotypes::sigproc\l::HeaderField\&lt; units::Modified\lJulianDate \&gt;\n|# _var\l|+ HeaderField()\l+ HeaderField()\l+ HeaderField()\l+ operator units::Modified\lJulianDateconst &amp;()\l+ operator units::Modified\lJulianDate &amp;()\l+ operator boost::optional\l\&lt; units::ModifiedJulianDate\l \&gt; const &amp;()\l+ operator=()\l+ operator=()\l+ read()\l+ write()\l+ write_info()\l+ reset()\l+ is_set()\l+ operator==()\l+ operator==()\l# HeaderField()\l}" alt="" coords="2189,709,2388,1063"/>
<area shape="rect" id="node16" href="$classpss_1_1astrotypes_1_1sigproc_1_1HeaderField.html" title="{pss::astrotypes::sigproc\l::HeaderField\&lt; std::vector\l\&lt; boost::units::quantity\&lt;\l units::MegaHertz, double \&gt; \&gt; \&gt;\n|# _var\l|+ HeaderField()\l+ HeaderField()\l+ HeaderField()\l+ operator std::vector\l\&lt; boost::units::quantity\l\&lt; units::MegaHertz, double\l \&gt; \&gt;const &amp;()\l+ operator std::vector\l\&lt; boost::units::quantity\l\&lt; units::MegaHertz, double \&gt; \&gt; &amp;()\l+ operator boost::optional\l\&lt; std::vector\&lt; boost::units\l::quantity\&lt; units::MegaHertz,\l double \&gt; \&gt; \&gt; const &amp;()\l+ operator=()\l+ operator=()\l+ read()\l+ write()\l+ write_info()\l+ reset()\l+ is_set()\l+ operator==()\l+ operator==()\l# HeaderField()\l}" alt="" coords="2412,676,2638,1096"/>
<area shape="rect" id="node2" href="$classpss_1_1astrotypes_1_1sigproc_1_1HeaderFieldBase.html" title="class to provide a virtual lookup table for read/write the varoious types of SigProcVariables ..." alt="" coords="1199,5,1360,239"/>
<area shape="rect" id="node4" href="$classpss_1_1astrotypes_1_1sigproc_1_1HeaderFieldDataType.html" title="{pss::astrotypes::sigproc\l::HeaderFieldDataType\&lt;\l unsigned \&gt;\n||+ HeaderFieldDataType()\l+ HeaderFieldDataType()\l+ HeaderFieldDataType()\l+ ~HeaderFieldDataType()\l+ operator=()\l+ read()\l}" alt="" coords="101,1171,280,1337"/>
<area shape="rect" id="node6" href="$classpss_1_1astrotypes_1_1sigproc_1_1HeaderFieldWithTolerance.html" title="{pss::astrotypes::sigproc\l::HeaderFieldWithTolerance\l\&lt; units::ModifiedJulianDate,\l decltype(_tsamp) const &amp; \&gt;\n||+ HeaderFieldWithTolerance()\l+ HeaderFieldWithTolerance()\l+ operator=()\l+ operator==()\l+ operator==()\l}" alt="" coords="1732,1171,1931,1337"/>
</map>
